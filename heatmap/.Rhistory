# Adjust pallette colors. -1  ->   0   -> 1
#                         red -> white -> blue
# I used this website: https://www.strangeplanet.fr/work/gradient-generator/index.php
# to generate CUSTOM gradients.
########################################
#red                                                                                              white
my.palette <- colorRampPalette(c("#AD0303", "#B61F1F", "#BF3B3B", "#C85757", "#D17373", "#DA8F8F", "#E3ABAB", "#ECC7C7", "#F5E3E3","#FFFFFF",
# white                                                                                            blue
"#FFFFFF", "#E4E6F5", "#C9CDEC", "#AFB5E3", "#949CD9", "#7984D0", "#5F6BC7", "#4453BD", "#293AB4", "#0F22AB"))(n=20)   #20 colors in total
heatmap.3(combined,
Rowv = rownames(combined),
Colv = colnames(combined),
col = my.palette,
dendrogram = "none")
setwd("~/working/personal/misc_scripts/heatmap")
source('..\utils.r')
######################################
# Get other helpfull material
######################################
source("heatmap3.R")    # get heatmap.3 as it was pre-implemented
source('../utils.r')
######################################
# Get other helpfull material
######################################
source("heatmap3.R")    # get heatmap.3 as it was pre-implemented
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = F, sep = ',', stringsAsFactors = FALSE)
mu <- intToUtf8(956)
rownames(data) <- paste(mu,"0", "=", c(1:1000)/1000, sep = "")
colnames(data) <- paste(mu,"1", "=", c(1:100)/100, sep="")
setwd("~/working/Brigham/R/paper/r2.d.prime_correlation_plot")
######################################
# Get other helpfull material
######################################
source("heatmap3.R")    # get heatmap.3 as it was pre-implemented
######################################
# Function declarations
######################################
rotate <- function(x) t(apply(x, 2, rev))   # found the stackoverflow post that this code is from: http://stackoverflow.com/questions/16496210/rotate-a-matrix-in-r
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
snps <- read.table("classical_formatted.txt", header = T, sep = '\t')
View(snps)
snps$Pval_log10 <- log10(snps$P)
snps[1,]$Pval_log10 <- -1915.790129843608015    # add it customly, from wolfram alpha
snps$Pval_log10 <- snps$Pval_log10
snps.to.not.plot <- snps[which(snps$P > 5 * 10^(-8)), ]
######################################
# Load the Column variants to adjust the order.
######################################
col.variants <- read.table("model2_all_variants.txt", header = F, sep='\n')
colnames(col.variants) <- "Variant" # I don't like things to be V1, V2, V3,...
temp <- read.table("classical_model2_ld.txt", header = F, sep = '\t')
col.order <- as.matrix(unique(temp$V2))
######################################
# Load the r^2 and D'
# Assign the row names so they won't be 1,2,3,...
# remove first column, since now we now the name of the row.
######################################
r2 <- read.table("r_sqrd.txt", sep = '\t', header = T)
rownames(r2) <- r2$SNPS
dp <- read.table("d_prime.txt", sep = '\t', header = T)
rownames(dp) <- dp$SNPS
r2 <- r2[, 2:ncol(r2)]
dp <- dp[, 2:ncol(dp)]
######################################
# Select the most statistically-significant SNPs
# to plot given the reference file.
# REMINDER: p-value < 5*10^(-8)
######################################
r2.to.plot <- r2[!rownames(r2) %in% snps.to.not.plot$Variant, !colnames(r2) %in% snps.to.not.plot$Variant]
dp.to.plot <- dp[!rownames(dp) %in% snps.to.not.plot$Variant, !colnames(dp) %in% snps.to.not.plot$Variant]
View(r2.to.plot)
new <- -r2.to.plot
corel <- dp.to.plot
View(new)
View(corel)
new <- -r2.to.plot
corel <- dp.to.plot
new$dummy <- c(NA)
corel$dummy <- c(NA)
combined = as.matrix(new)
combined[apply(lower.tri(as.matrix(corel)), 1, rev)]  <- as.matrix(corel)[apply(lower.tri(as.matrix(corel)), 1, rev)]
View(combined)
setwd("~/working/Brigham/R/paper/r2.d.prime_correlation_plot")
setwd("~/working/personal/misc_scripts/heatmap")
write.csv(combined, 'test.txt')
write.csv(combined, 'test.txt', quote = '')
?write.csv
write.csv(combined, 'test.txt', quote = F)
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = F, sep = ',', stringsAsFactors = FALSE)
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = F, sep = ',', stringsAsFactors = FALSE)
View(data)
data.to.plot <- data.to.plot[]
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = F, sep = ',', stringsAsFactors = FALSE)
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(data,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
######################################
# Get other helpfull material
######################################
source("heatmap3.R")    # get heatmap.3 as it was pre-implemented
heatmap.3(data,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
data.to.plot <- as.matrix(data)
heatmap.3(data.to.plot,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
View(data.to.plot)
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = T, sep = ',', stringsAsFactors = FALSE)
data.to.plot <- as.matrix(data)
rownames(data.to.plot) <- data[,1]
View(data.to.plot)
rownames <- data[,1]
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = T, sep = ',', stringsAsFactors = FALSE)
rownames <- data[,1]
data.to.plot <- as.matrix(data)
data.to.plot[,1] <- NULL
data.to.plot <- data.to.plot[, -c(1)]
View(data.to.plot)
rownames(data.to.plot) <- rownames
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
png(filename = "Test.png")
heatmap.3(data.to.plot,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
data.to.plot <- as.numeric(data)
colnames <- data[1,]
View(colnames)
colnames <- as.matrix(data[1,])
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
data <- read.csv("test.txt", header = F, sep = ',', stringsAsFactors = FALSE)
rownames <- data[,1]
colnames <- data[1,]
View(colnames)
heatmap.3(data.to.plot,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
data <- read.csv("test.txt", header = T, sep = ',', stringsAsFactors = FALSE)
rownames <- data[,1]
data.to.plot <- as.matrix(data)
data.to.plot <- data.to.plot[, -c(1)]
rownames(data.to.plot) <- rownames
data.to.plot <- as.numeric(data.to.plot)
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(data.to.plot,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
source('../utils.r', "heatmap3.R")
source('../utils.r')
source('../utils.r')
source('../utils.r')
source("heatmap3.R")
data <- read.csv("test.txt", header = T, sep = ',', stringsAsFactors = FALSE)
View(data)
data[,-1]
write.csv(data[,c(-1]))
data[,c(-1)]
data$dummy <- NULL
View(data)
write.csv(data, quote = F, row.names = F)
write.csv(data, "test1.txt", quote = F, row.names = F)
data <- read.csv("test1.txt", header = T, sep = ',', stringsAsFactors = FALSE)
View(data)
View(data)
rownames <- data[,1]
colnames <- colnames(data)
View(data)
write.csv(data[c(1:10), c(1:10)], quote = F, row.names = F)
write.csv(data[c(1:10), c(1:10)], 'test2.txt', quote = F, row.names = F)
write.csv(data[c(1:10), c(1:11)], 'test2.txt', quote = F, row.names = F)
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = FALSE)
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = FALSE)
View(data)
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = FALSE)
rownames <- data[,1]
colnames <- colnames(data)
data.to.plot <- as.matrix(data)
data.to.plot <- data.to.plot[, -c(1)]
rownames(data.to.plot) <- rownames
View(data.to.plot)
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(data.to.plot,
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
View(data.to.plot)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames(data),
Colv = colnames(data),
col = my.palette,
dendrogram = "none")
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- data[,1]
colnames <- colnames(data)
data.to.plot <- as.matrix(data)
data.to.plot <- data.to.plot[, -c(1)]
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
View(data.to.plot)
data <- read.csv("test2.txt", header = F, sep = ',', stringsAsFactors = TRUE)
colnames <- data[,1]
rownames <- rownames(data)
View(data.to.plot)
View(data)
data.to.plot <- as.matrix(data)
data.to.plot <- data.to.plot[, -c(1)]
View(data.to.plot)
data.to.plot <- as.matrix(data)
data.to.plot <- data.to.plot[-c(1), -c(1)]
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
data.to.plot <- data[-c(1), -c(1)]
data <- read.csv("test2.txt", header = F, sep = ',', stringsAsFactors = TRUE)
colnames <- data[,1]
source('../utils.r')
source("heatmap3.R")
data <- read.csv("test2.txt", header = F, sep = ',', stringsAsFactors = TRUE)
colnames <- data[,1]
rownames <- rownames(data)
rownames <- data[1,]
rownames <- rownames(data)
View(data)
colnames <- as.character(as.vector(data[1,]))
rownames <- data[,1]
data <- read.csv("test2.txt", header = F, sep = ',', stringsAsFactors = TRUE)
colnames <- as.character(as.vector(data[1,]))
rownames <- data[,1]
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- data[,1]
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- data[,1]
colnames <- colnames(data)
rownames <- as.vector(data[,1])
colnames <- colnames(data)
rownames <- as.vector(data[,1])[c(2:nrow(data)),]
rownames <- as.vector(data[,1])[c(2:nrow(data))]
colnames <- colnames(data)[c(2:ncol(data))]
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
data.to.plot <- as.vector(data)
View(data.to.plot)
data.to.plot <- data.to.plot[, -c(1)]
data.to.plot <- as.numeric(data.to.plot[, -c(1)])
data.to.plot <- as.matrix(data.to.plot[, -c(1)])
View(data.to.plot)
setwd("~/working/Brigham/R/paper/r2.d.prime_correlation_plot")
# File: corrplot1.R
# Author: Ioannis-Pavlos Panteliadis <ipanteliadis@bwh.harvard.edu>
# Last Updated: 01/25/2017
#
#
# Brief:  Generate correlation plot for the given data.
if (!require("ggplot2")) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require("Cairo")) {
install.packages("Cairo")
library(Cairo)
}
if (!require("gplots")) {
install.packages("gplots")
library(gplots)
}
# In order to use the 'lowerUpper' function. this package is needed
if (!require("psych")) {
install.packages("psych")
library(psych)
}
######################################
# Get other helpfull material
######################################
source("heatmap3.R")    # get heatmap.3 as it was pre-implemented
######################################
# Function declarations
######################################
rotate <- function(x) t(apply(x, 2, rev))   # found the stackoverflow post that this code is from: http://stackoverflow.com/questions/16496210/rotate-a-matrix-in-r
######################################
# START: Load the SNPS and get those with P < 5*10^(-8) to know which to plot
######################################
snps <- read.table("classical_formatted.txt", header = T, sep = '\t')
snps$Pval_log10 <- log10(snps$P)
snps[1,]$Pval_log10 <- -1915.790129843608015    # add it customly, from wolfram alpha
snps$Pval_log10 <- snps$Pval_log10
snps.to.not.plot <- snps[which(snps$P > 5 * 10^(-8)), ]
######################################
# Load the Column variants to adjust the order.
######################################
col.variants <- read.table("model2_all_variants.txt", header = F, sep='\n')
colnames(col.variants) <- "Variant" # I don't like things to be V1, V2, V3,...
temp <- read.table("classical_model2_ld.txt", header = F, sep = '\t')
col.order <- as.matrix(unique(temp$V2))
######################################
# Load the r^2 and D'
# Assign the row names so they won't be 1,2,3,...
# remove first column, since now we now the name of the row.
######################################
r2 <- read.table("r_sqrd.txt", sep = '\t', header = T)
rownames(r2) <- r2$SNPS
dp <- read.table("d_prime.txt", sep = '\t', header = T)
rownames(dp) <- dp$SNPS
r2 <- r2[, 2:ncol(r2)]
dp <- dp[, 2:ncol(dp)]
######################################
# Select the most statistically-significant SNPs
# to plot given the reference file.
# REMINDER: p-value < 5*10^(-8)
######################################
r2.to.plot <- r2[!rownames(r2) %in% snps.to.not.plot$Variant, !colnames(r2) %in% snps.to.not.plot$Variant]
dp.to.plot <- dp[!rownames(dp) %in% snps.to.not.plot$Variant, !colnames(dp) %in% snps.to.not.plot$Variant]
# fix minor things within the data. Primarily from reading them in R
colnames(r2.to.plot)[grep("X1kg_6_30163158", colnames(r2.to.plot))] <- "1kg_6_30163158"
colnames(dp.to.plot)[grep("X1kg_6_30163158", colnames(dp.to.plot))] <- "1kg_6_30163158"
new <- -r2.to.plot
corel <- dp.to.plot
new$dummy <- c(NA)
corel$dummy <- c(NA)
combined = as.matrix(new)
combined[apply(lower.tri(as.matrix(corel)), 1, rev)]  <- as.matrix(corel)[apply(lower.tri(as.matrix(corel)), 1, rev)]
View(combined)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
source('../utils.r')
source("heatmap3.R")
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
data.to.plot <- as.vector(data)
data.to.plot <- as.matrix(data.to.plot[, -c(1)])
########################################
# Adjust pallette colors. -1  ->   0   -> 1
#                         red -> white -> blue
# I used this website: https://www.strangeplanet.fr/work/gradient-generator/index.php
# to generate CUSTOM gradients.
########################################
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
setwd("~/working/personal/misc_scripts/heatmap")
source('../utils.r')
source("heatmap3.R")
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
data.to.plot <- as.vector(data)
data.to.plot <- as.matrix(data.to.plot[, -c(1)])
########################################
# Adjust pallette colors. -1  ->   0   -> 1
#                         red -> white -> blue
# I used this website: https://www.strangeplanet.fr/work/gradient-generator/index.php
# to generate CUSTOM gradients.
########################################
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(as.matrix(data.to.plot),
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
View(data.to.plot)
heatmap.3(data.to.plot,
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
data.to.plot <- data.to.plot[, -c(1)]
heatmap.3(data.to.plot,
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
data <- read.csv("test2.txt", header = F, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
View(data)
colnames <- colnames(data)[c(3:ncol(data))]
rownames <- as.vector(data[,2])
1
rownames <- as.vector(data[,1])
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
data.to.plot <- as.vector(data)
data.to.plot <- data.to.plot[, -c(1)]
View(data.to.plot)
heatmap.3(data.to.plot,
Rowv = rownames,
Colv = colnames,
col = my.palette,
dendrogram = "none")
heatmap.3(data.to.plot,
Rowv = rownames(data.to.plot),
Colv = colnames(data.to.plot),
col = my.palette,
dendrogram = "none")
View(data.to.plot)
source("heatmap3.R")
heatmap.3(data.to.plot,
Rowv = rownames(data.to.plot),
Colv = colnames(data.to.plot),
col = my.palette,
dendrogram = "none")
rownames(data.to.plot) <- rownames
heatmap.3(data.to.plot,
Rowv = rownames(data.to.plot),
Colv = colnames(data.to.plot),
col = my.palette,
dendrogram = "none")
source('../utils.r')
source("heatmap3.R")
# Open the data and do some preprocessing
data <- read.csv("test2.txt", header = T, sep = ',', stringsAsFactors = TRUE)
rownames <- as.vector(data[,1])
colnames <- colnames(data)[c(2:ncol(data))]
data.to.plot <- as.vector(data)
data.to.plot <- data.to.plot[, -c(1)]
rownames(data.to.plot) <- rownames
my.palette <- colorRampPalette(c("#51C206", "#5EC308", "#6CC40B", "#7AC50E", "#88C710", "#96C813", "#A3C916", "#B1CB18", "#BFCC1B", "#CDCD1E", "#DBCF21", "#DABA20", "#D9A61F", "#D9921E", "#D87E1D", "#D86A1D", "#D7561C", "#D7421B", "#D62E1A", "#D61A1A"))(n=20)
heatmap.3(data.to.plot,
Rowv = rownames(data.to.plot),
Colv = colnames(data.to.plot),
col = my.palette,
dendrogram = "none")
source('../utils.r')
source('../utils.r')
# Read and parse the settings file
settings <- processFile('example_inputs/Settings.txt')
palette <- strsplit(settings[1], ",")[[1]]
source('../utils.r')
source("heatmap3.R")
# Read and parse the settings file
settings <- processFile('example_inputs/Settings.txt')
palette <- strsplit(settings[1], ",")[[1]]
plot_name <- settings[2]
source('../utils.r')
source("heatmap3.R")
# Read and parse the settings file
settings <- processFile('example_inputs/Settings.txt')
palette <- strsplit(settings[1], ",")[[1]]
plot_name <- settings[2]
source('../utils.r')
source("heatmap3.R")
# Read and parse the settings file
settings <- processFile('example_inputs/Settings.txt')
# Read and parse the settings file
settings <- processFile('example_inputs/Settings.txt')
palette <- strsplit(settings[1], ",")[[1]]
plot_name <- settings[2]
my.palette <- colorRampPalette(palette)(n=length(palette))
heatmap.3(data.to.plot,
Rowv = rownames(data.to.plot),
Colv = colnames(data.to.plot),
col = my.palette,
dendrogram = "none")
